{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0736c9c4_929df5c8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1010788
      },
      "writtenOn": "2024-07-04T14:46:51Z",
      "side": 1,
      "message": "I have added the logic to hide the checkbox when `gerrit.projectStatePredicateEnabled \u003d false` which comes from parent change https://gerrit-review.googlesource.com/c/gerrit/+/432317/ . The web UI defaults it to true since in most case it is never set and the predicate is enabled.\n\nI have renamed the variable from `hideReadOnlyRepo` to `showActiveRepos` since checking it causes the project to be filtered based on `state:active` and that the mismatching semantic was annoying me.\n\nI have tested it locally with `gerrit.projectStatePredicateEnabled` not set, set to true and set to false and I got the expected behavior (it is shown in both first two cases and hidden when config is false).",
      "revId": "f91bd55d10f310358520c5f122901e7697b3ba4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae8a9ee4_55834b39",
        "filename": "polygerrit-ui/app/elements/admin/gr-repo-list/gr-repo-list.ts",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2024-07-04T14:45:58Z",
      "side": 1,
      "message": "We don\u0027t do it this way anymore well for any that is in a model. You can use the mode to fetch the server config. See https://github.com/GerritCodeReview/gerrit/blob/92d127e9fc24cf44ae45a0d2ae7a5fe42b277cd4/polygerrit-ui/app/elements/change-list/gr-change-list-reviewer-flow/gr-change-list-reviewer-flow.ts#L165",
      "revId": "f91bd55d10f310358520c5f122901e7697b3ba4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "beeeda4f_7087d560",
        "filename": "polygerrit-ui/app/elements/admin/gr-repo-list/gr-repo-list.ts",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1010788
      },
      "writtenOn": "2024-07-04T14:56:16Z",
      "side": 1,
      "message": "I have retrieved the config the same way as the account is retrieved just a few lines above (in `getCreateRepoCapability`).\n\nI argue the refactoring can be made in a follow up change?",
      "parentUuid": "ae8a9ee4_55834b39",
      "revId": "f91bd55d10f310358520c5f122901e7697b3ba4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c36668d9_362ee5bf",
        "filename": "polygerrit-ui/app/elements/admin/gr-repo-list/gr-repo-list.ts",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2024-07-04T15:32:04Z",
      "side": 1,
      "message": "`getCreateRepoCapability` isn\u0027t in a model. `getConfig` isn\u0027t really dependent on `getCreateRepoCapability`. Putting it in the constructor and using the model, it gets executed before everything else. It\u0027s up to you if you want to do it in a seperate patch.",
      "parentUuid": "beeeda4f_7087d560",
      "revId": "f91bd55d10f310358520c5f122901e7697b3ba4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fec6c81b_0532c127",
        "filename": "polygerrit-ui/app/elements/admin/gr-repo-list/gr-repo-list.ts",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1010788
      },
      "writtenOn": "2024-07-04T16:08:57Z",
      "side": 1,
      "message": "What I argue is that `getCreateRepoCapability()` above is retrieving the user account and the code you pointed to does:\n```\n    subscribe(\n      this,\n      () \u003d\u003e this.getUserModel().account$,\n      account \u003d\u003e (this.account \u003d account)\n    );\n```\n\nSo it looks like `getCreateRepoCapability` can be ported to the constructor using that subscribe() call. But that is out of the scope of this change.   Maybe I can try doing it in a new change and rebase mine on top, but not this week.",
      "parentUuid": "c36668d9_362ee5bf",
      "revId": "f91bd55d10f310358520c5f122901e7697b3ba4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}