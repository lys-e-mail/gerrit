{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2a1856a9_59e8f4a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-06-10T17:07:42Z",
      "side": 1,
      "message": "will not be",
      "range": {
        "startLine": 14,
        "startChar": 50,
        "endLine": 14,
        "endChar": 57
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62a2ea39_e04412bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-06-10T22:53:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a1856a9_59e8f4a0",
      "range": {
        "startLine": 14,
        "startChar": 50,
        "endLine": 14,
        "endChar": 57
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59c71491_ac1c0912",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-06-10T17:07:42Z",
      "side": 1,
      "message": "at most once.",
      "range": {
        "startLine": 21,
        "startChar": 36,
        "endLine": 21,
        "endChar": 46
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b271c79e_820e51f6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-06-10T22:53:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59c71491_ac1c0912",
      "range": {
        "startLine": 21,
        "startChar": 36,
        "endLine": 21,
        "endChar": 46
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "235d68a1_206831e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-06-10T19:39:59Z",
      "side": 1,
      "message": "I think either here and/or in the documentation of `DynamicItem`, it would be useful to expand a bit on _where_ this annotation should go.\n\n1. The interface? 2. The class implementation? 3. The binding variable?\n\nExplaining that it should be the `interface` being annotated (or even just providing an example) would be useful imho.",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 53
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dff01d2d_57bd1a68",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-06-10T22:53:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "235d68a1_206831e1",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 53
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef76cb54_51004915",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-06-10T17:07:42Z",
      "side": 1,
      "message": "I tested this with @ponch78@gmail.com and we covered different tests:\n\n- Binding dynamic item final without restricting by name. Attempting to bind a different implementation causes an exception. OK\n\n- Binding dynamic item final with restriction by name. Attempting to bind an implementation from a different plugin causes an exception. OK\n\n- Binding dynamic item final with or without restriction by name and then unloading the plugin, causes the DynamicItem to be re-set to `null`, which is expected. OK\n\n@luca.milanesio@gmail.com any chance to test this programmatically. @ponch78@gmail.com and I came up short with an integration test that we believed should have worked (see Id2869294), but it doesn\u0027t ðŸ˜Š. Seems like the test server is following a different path as we don\u0027t see your code being engaged at all. Any ideas how to modify that test? perhaps it could provide some inspiration.",
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "073fa079_0c8633ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-06-10T19:28:54Z",
      "side": 1,
      "message": "I think this solution is a viable one: the change is small and back compatible,and, unless I am missing something it achieves all requirements of Issue 338786480.\n\nUnless anyone else can think of any drawbacks or gotchas that I might be missing, I am happy to approve this once comments have been addressed.",
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47cd79f3_670d5874",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-06-10T22:53:01Z",
      "side": 1,
      "message": "I have found that it doesn\u0027t work with plugin reloads, but it looks like that is a bug of the x-plugin support from the very beginning. I\u0027ve raised Issue 346350837 and a WIP fix I6cda1b3fcf.\n\nP.S. Testing plugin reloads / unloads / restart in our IT tests is basically impossible at the moment. We have to rely on manual testing I\u0027m afraid.",
      "parentUuid": "ef76cb54_51004915",
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15ab774c_5c1bd3ef",
        "filename": "java/com/google/gerrit/extensions/registration/DynamicItem.java",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-06-10T17:07:42Z",
      "side": 1,
      "message": "```suggestion\n  /** Annotate a DynamicItem to be final and being bound at most once. */\n```",
      "range": {
        "startLine": 46,
        "startChar": 57,
        "endLine": 46,
        "endChar": 67
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be0c62f9_74052fb1",
        "filename": "java/com/google/gerrit/extensions/registration/DynamicItem.java",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-06-10T22:53:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15ab774c_5c1bd3ef",
      "range": {
        "startLine": 46,
        "startChar": 57,
        "endLine": 46,
        "endChar": 67
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dfeb4cf_71f03493",
        "filename": "java/com/google/gerrit/extensions/registration/PrivateInternals_DynamicTypes.java",
        "patchSetId": 6
      },
      "lineNbr": 106,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-06-10T17:07:42Z",
      "side": 1,
      "message": "```suggestion\n            if (existingBinding !\u003d null) {\n```",
      "range": {
        "startLine": 106,
        "startChar": 16,
        "endLine": 106,
        "endChar": 26
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8331778_e34762a7",
        "filename": "java/com/google/gerrit/extensions/registration/PrivateInternals_DynamicTypes.java",
        "patchSetId": 6
      },
      "lineNbr": 106,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-06-10T19:39:59Z",
      "side": 1,
      "message": "I am thinking on whether there is any scenario for which the _same_ instance _type_ would be attempted to be bound and whether we should allow this or not.\n\nAs in, if the `DynamicItem\u003cfoo\u003e` is bound to `FooImpl`, should a subsequent attempt to register a new `FooImpl` instance be allowed?\n\nI personally think it shouldn\u0027t, but I am wondering about different `Gerrit-ReloadMode`. Is there any chance that the plugin reloading would cause a registration attempt of the same instance value/type?",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 106,
        "endChar": 37
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77e6ee78_0e2cfe8b",
        "filename": "java/com/google/gerrit/extensions/registration/PrivateInternals_DynamicTypes.java",
        "patchSetId": 6
      },
      "lineNbr": 106,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-06-10T21:48:11Z",
      "side": 1,
      "message": "\u003e As in, if the DynamicItem\u003cfoo\u003e is bound to FooImpl, should a subsequent attempt to register a new FooImpl instance be allowed?\n\nI _think_ this should be already prohibited by Guice out of the box, as you can\u0027t bind the same type twice and with `DynamicItem` under the hood we\u0027re binding `TypeLiteral\u003cDynamicItem\u003cT\u003e\u003e` so calling `DynamicItem.bind(binder(), T).bind()` twice will result in \"type already bound exception\" thrown by Guice.",
      "parentUuid": "e8331778_e34762a7",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 106,
        "endChar": 37
      },
      "revId": "0cbafece788c70d6cfbd0d3348ab412a57d94d3d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}