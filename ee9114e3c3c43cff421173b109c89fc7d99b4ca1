{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2b58bca7_5b782e26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2024-06-26T09:03:31Z",
      "side": 1,
      "message": "I\u0027ve tested the change on gerrit.googlesource.com, and I\u0027ve realized that `state` option is disabled on `googlesource`. I\u0027ve asked internally for the reason behind it, and it seems that such requests can be quite expensive.\n\nIf this feature is important to you, you would need to implement server config variable that can control whether or not it\u0027s enabled.",
      "revId": "ee9114e3c3c43cff421173b109c89fc7d99b4ca1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da2faef4_4f458f01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1010788
      },
      "writtenOn": "2024-06-26T10:36:20Z",
      "side": 1,
      "message": "Thank you to have asked! And indeed if I try the query I get:\n\n\u003e Error 400 (Bad Request): Unsupported operator `state:active`\nI could not find any configuration to disable it which leads me to suspect the method is removed from the version Google is running and there is a non public patch to disable it. Maybe that internal patch can be enhanced to use a config switch?\n\nElse do you have a pointer to do so? Looks like maybe I could copy what was done for `conflicts_predicate_enabled`:\n* I9ba925aad93ee8cf56257a2e5995ed79958ac6cd\n* Iae759a5b89dbf4c51b44675dfb6ed58df39f3ccb\n\nAnd introduce a `project_state_predicate_enabled` :]",
      "parentUuid": "2b58bca7_5b782e26",
      "revId": "ee9114e3c3c43cff421173b109c89fc7d99b4ca1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cd4c505_912bee9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2024-06-26T11:27:14Z",
      "side": 1,
      "message": "I don\u0027t think there is any existing config value that you can directly use.\n\nYou can take a look in https://cs.opensource.google/gerrit/gerrit/gerrit/+/master:java/com/google/gerrit/server/restapi/config/GetServerInfo.java\n\nThis is the endpoint that populate ServerInfo available in the frontend.\nAFAIK all you need is to add a line, like\n\n```\nconfig.getBoolean(\u003csection-name\u003e, \u003csubsection-name\u003e, \u003cfield name\u003e, \u003cdefault value that doesn\u0027t break current usages\u003e)\n```\n\nand add a field in ServerInfo to store and propagate that to the Frontend to use in the JS code.\n\n`config` is for JGit Config instance, that is parsing git-style config files. (you will see example of these in the file I linked above)",
      "parentUuid": "da2faef4_4f458f01",
      "revId": "ee9114e3c3c43cff421173b109c89fc7d99b4ca1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c30f9a1e_be8ebe9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1010788
      },
      "writtenOn": "2024-06-26T11:43:17Z",
      "side": 1,
      "message": "Great thank you! I will look at implementing the backend counterpart over the week-end and will most probably do it in a different change.",
      "parentUuid": "7cd4c505_912bee9e",
      "revId": "ee9114e3c3c43cff421173b109c89fc7d99b4ca1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}